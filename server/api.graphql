### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String
  user: User
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the
`date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO
8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""
The `JSON` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar Json

type Mutation {
  createOneTweet(data: TweetCreateInput!): Tweet!
  createOneUser(data: UserCreateInput!): User!
  login(email: String!, password: String!): AuthPayload
}

type Query {
  tweet(where: TweetWhereUniqueInput!): Tweet
  tweets(after: TweetWhereUniqueInput, before: TweetWhereUniqueInput, first: Int, last: Int): [Tweet!]!
  user(where: UserWhereUniqueInput!): User
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
}

type Tweet {
  created: DateTime
  id: String!
  message: String!
  User: User!
}

input TweetCreateInput {
  created: DateTime
  id: String
  message: String!
  User: UserCreateOneWithoutTweetInput!
}

input TweetCreateManyWithoutUserInput {
  connect: [TweetWhereUniqueInput!]
  create: [TweetCreateWithoutUserInput!]
}

input TweetCreateWithoutUserInput {
  created: DateTime
  id: String
  message: String!
}

input TweetWhereUniqueInput {
  id: String
}

type User {
  email: String!
  id: String!
  name: String!
  Tweet(after: TweetWhereUniqueInput, before: TweetWhereUniqueInput, first: Int, last: Int): [Tweet!]!
  user_name: String!
}

input UserCreateInput {
  email: String!
  id: String
  name: String!
  pw: String!
  Tweet: TweetCreateManyWithoutUserInput
  user_name: String!
}

input UserCreateOneWithoutTweetInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutTweetInput
}

input UserCreateWithoutTweetInput {
  email: String!
  id: String
  name: String!
  pw: String!
  user_name: String!
}

input UserWhereUniqueInput {
  email: String
  id: String
  user_name: String
}
